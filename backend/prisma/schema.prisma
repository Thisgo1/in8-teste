// schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  firstName String?
  lastName  String?
  hash      String
  image     String?
  addresses Address[]
  orders    Order[]
  bookmarks Bookmark[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Bookmark {
  id          Int     @id @default(autoincrement())
  title       String
  description String?
  link        String

  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("bookmarks")
}

model Address {
  id         Int     @id @default(autoincrement())
  street     String
  city       String
  state      String
  postalCode String
  complement String?
  number     Int
  country    String  @default("Brasil")
  isDefault  Boolean @default(false)
  userId     Int
  user       User    @relation(fields: [userId], references: [id])
}

model Order {
  id          Int         @id @default(autoincrement())
  orderNumber String      @unique
  userId      Int
  user        User        @relation(fields: [userId], references: [id])
  items       OrderItem[]
  total       Float
  status      OrderStatus @default(PENDING)
  paymentId   String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model OrderItem {
  id        Int          @id @default(autoincrement())
  orderId   Int
  order     Order        @relation(fields: [orderId], references: [id])
  productId String // ID do produto na API externa
  name      String
  price     Float
  quantity  Int
  provider  ProviderType // BRASILIAN ou EUROPEAN
}

enum OrderStatus {
  PENDING
  PROCESSING
  COMPLETED
  CANCELLED
  REFUNDED
}

enum ProviderType {
  BRASILIAN
  EUROPEAN
}
